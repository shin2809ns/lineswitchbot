import { Point, PointDef } from "./Point";
export interface LineDef {
    p1: PointDef;
    p2: PointDef;
}
export declare class Line implements LineDef {
    p1: Point;
    p2: Point;
    constructor(p1: PointDef, p2: PointDef);
    constructor(line: LineDef);
    get generalForm(): [number, number, number];
    lerp(t: number): Point;
    rlerp(p: PointDef): number | null;
    intersectsAt(line: LineDef): Point | null;
    intersects(line: LineDef): boolean;
    intersectsAtTime(line: LineDef): number | null;
    isExtensionOf(line: LineDef): boolean;
    isParallelTo(line: LineDef): boolean;
    isPerpendicularTo(line: LineDef): boolean;
    isCollinearTo(line: LineDef): boolean;
    isConcurrentTo(line: LineDef): boolean;
    sign(p: PointDef): number;
    get length(): number;
}
